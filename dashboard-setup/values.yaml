oauth2-proxy:
  # Oauth client configuration specifics  
  config:  
    # OAuth client ID  
    clientID: 7b8e6113214551d37e7d
    # OAuth client secret  
    clientSecret: 5c25a2da684b8202a3746f9b0a900092654a4451
    # Create a new secret with the following command  
    # python -c 'import os,base64; print base64.b64encode(os.urandom(16))'  
    cookieSecret: 6PadHY6nbh0pGkdkwLaEiQ==
    # Custom configuration file see https://github.com/bitly/oauth2_proxy/blob/master/contrib/oauth2_proxy.cfg.example
    configFile: |-  
      ## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
      set_authorization_header = true
      pass_authorization_header = true
      #upstreams = [  
      #    "https://kubernetes-dashboard:8443/"  
      #]  

  extraArgs:  
    provider: "github"  
    email-domain: "*"  
    upstream: "file:///dev/null"  
    http-address: "0.0.0.0:4180"  
  service: 
    port: 4180
  ingress:  
    enabled: true  
    path: /oauth2  
    hosts:  
    - app.k8s.prod.akashkatakam.com
    annotations:  
      kubernetes.io/ingress.class: nginx  
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    tls:  
    # certmanager will use the letsencrypt issues to create the TLS secret in the namespace if they don't exist
    - hosts:  
      - app.k8s.prod.akashkatakam.com
      secretName: letsencrypt-certs 

kubernetes-dashboard:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$request_uri
        nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
        # nginx.ingress.kubernetes.io/auth-url: "https://app.k8s.prod.akashkatakam.com/oauth2/auth"
        # nginx.ingress.kubernetes.io/auth-signin: "https://app.k8s.prod.akashkatakam.com/oauth2/start?rd=$escaped_request_uri"
        # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/secure-backends: "true"
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        # kubernetes.io/ingress.allow-http: "false"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          auth_request_set $name_upstream_1 $upstream_cookie_name_1;

          access_by_lua_block {
            if ngx.var.name_upstream_1 ~= "" then
              ngx.header["Set-Cookie"] = "name_1=" .. ngx.var.name_upstream_1 .. ngx.var.auth_cookie:match("(; .*)")
            end
          }
      hosts:
      - app.k8s.prod.akashkatakam.com
      tls:
      - hosts:
        - app.k8s.prod.akashkatakam.com
        secretName: letsencrypt-certs 